<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Чат на Supabase</title>
  <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: Arial, sans-serif;
      background-color: #e0f7e0;
      display: flex;
      flex-direction: column;
      height: 100vh;
    }

    .chat-container {
      flex: 1;
      display: flex;
      flex-direction: column;
      padding: 10px;
    }

    .messages {
      flex: 1;
      overflow-y: auto;
      padding: 10px;
      background-color: #ffffff;
      border-radius: 10px;
      margin-bottom: 10px;
    }

    .message {
      padding: 8px;
      margin-bottom: 10px;
      background-color: #c8e6c9;
      border-radius: 10px;
      max-width: 70%;
    }

    .input-container {
      display: flex;
      gap: 10px;
    }

    #messageInput {
      flex: 1;
      padding: 10px;
      border-radius: 20px;
      border: 1px solid #81c784;
    }

    #sendButton {
      padding: 10px 20px;
      background-color: #4caf50;
      color: white;
      border: none;
      border-radius: 20px;
      cursor: pointer;
    }

    #sendButton:hover {
      background-color: #388e3c;
    }

    @media (max-width: 600px) {
      .input-container {
        flex-direction: column;
      }
    }
  </style>
</head>
<body>
  <div class="chat-container">
    <div class="messages" id="messages"></div>
    <div class="input-container">
      <input type="text" id="messageInput" placeholder="Введите сообщение..." />
      <button id="sendButton">Отправить</button>
    </div>
  </div>

  <script>
    // Замените на свои данные из Supabase
    const SUPABASE_URL = 'https://qizodhlzepcenlekabfl.supabase.co';
    const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFpem9kaGx6ZXBjZW5sZWthYmZsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3MTc0OTEsImV4cCI6MjA3MTI5MzQ5MX0.OCED_68hutL1QUrn50Yp6SWT_-zrOVFt9C076Wr-ovo';
    
    const supabase = window.supabase.createClient(SUPABASE_KEY, SUPABASE_KEY);
    const messagesDiv = document.getElementById('messages');
    const messageInput = document.getElementById('messageInput');
    const sendButton = document.getElementById('sendButton');

    // Получаем старые сообщения
    async function loadMessages() {
      const { data, error } = await supabase
        .from('messages')
        .select('*')
        .order('inserted_at', { ascending: true });

      if (error) {
        console.error('Ошибка загрузки сообщений:', error);
        return;
      }

      data.forEach(msg => {
        addMessageToUI(msg.text);
      });
    }

    // Подписка на новые сообщения в реальном времени
    supabase
      .channel('messages')
      .on(
        'postgres_changes',
        {
          event: 'INSERT',
          schema: 'public',
          table: 'messages',
        },
        (payload) => {
          addMessageToUI(payload.new.text);
        }
      )
      .subscribe();

    // Функция добавления сообщения в UI
    function addMessageToUI(text) {
      const div = document.createElement('div');
      div.className = 'message';
      div.textContent = text;
      messagesDiv.appendChild(div);
      messagesDiv.scrollTop = messagesDiv.scrollHeight;
    }

    // Отправка сообщения
    async function sendMessage() {
      const text = messageInput.value.trim();
      if (!text) return;

      const { error } = await supabase
        .from('messages')
        .insert([{ text }]);

      if (error) {
        console.error('Ошибка отправки:', error);
      } else {
        messageInput.value = '';
      }
    }

    sendButton.addEventListener('click', sendMessage);
    messageInput.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') sendMessage();
    });

    // Загрузка сообщений при старте
    loadMessages();
  </script>
</body>
</html>